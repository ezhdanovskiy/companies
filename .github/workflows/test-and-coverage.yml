name: Test and Coverage

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Install dependencies
      run: go mod download

    - name: Start Kafka and Zookeeper
      run: |
        docker run -d --name zookeeper -p 2181:2181 \
          -e ZOOKEEPER_CLIENT_PORT=2181 \
          -e ZOOKEEPER_TICK_TIME=2000 \
          confluentinc/cp-zookeeper:latest
        
        sleep 10
        
        docker run -d --name kafka -p 9092:9092 \
          -e KAFKA_BROKER_ID=1 \
          -e KAFKA_ZOOKEEPER_CONNECT=host.docker.internal:2181 \
          -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 \
          -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 \
          -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 \
          confluentinc/cp-kafka:latest
        
        sleep 20

    - name: Create Kafka topic
      run: |
        docker exec kafka kafka-topics --create \
          --topic companies-mutations \
          --bootstrap-server localhost:9092 \
          --partitions 1 \
          --replication-factor 1

    - name: Run migrations
      run: |
        go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
        migrate -database "postgres://postgres:postgres@localhost:5432/testdb?sslmode=disable" -path migrations up
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb?sslmode=disable

    - name: Run tests with coverage
      run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_NAME: testdb
        DB_SSL_MODE: disable
        KAFKA_ADDR: localhost:9092
        KAFKA_TOPIC: companies-mutations
        JWT_KEY: test-secret-key
        HTTP_PORT: 8080
        LOG_LEVEL: debug

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.out
        flags: unittests
        name: codecov-companies
        fail_ci_if_error: false
        verbose: true

    - name: Clean up
      if: always()
      run: |
        docker stop kafka zookeeper || true
        docker rm kafka zookeeper || true
